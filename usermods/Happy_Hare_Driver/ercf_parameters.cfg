[ercf]
# Encoder setup. The encoder_pin must match the pin defined in the ercf_hardware.cfg
# The encoder_resolution is determined by running the ERCF_CALIBRATE_ENCODER. See manual.
encoder_pin: ^ercf:PA6
encoder_resolution: 1.474709		# Set AFTER 'rotation_distance' is tuned for gear stepper (see manual)

# Speeds and accels
# Long moves are faster than the small ones
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower if your really want it to be low noise
# Tested without any issue at 200mm/s, but it's noisy. I'm running mine at 170mm/s for long moves and 50mm/s for short moves.
long_moves_speed: 150			# mm/s. Conservative value is 100mm/s.
short_moves_speed: 50			# mm/s. Conservative value is 25mm/s.

# Logging
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# Generally you can keep console logging to a minimal whilst still sending debug output to the ercf.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file.
log_level: 1
logfile_level: 3			# Can also be set to -1 to disable log file completely
# log_statistics set to 1 will log print statistics on each tool change
# These statistics include things like the number of swaps completed, as well as time spent swapping
log_statistics: 1 
# log_visual set to 1 will log print a fun visual representation of ERCF on state changes showing filament position
log_visual: 1 

# Servo Configuration
servo_up_angle: {servo_up_angle}			# Default: MG90S servo: Up=30    ; SAVOX SH0255MG: Up=140
servo_down_angle: {servo_down_angle}			# Default: MG90S servo: Down=140 ; SAVOX SH0255MG: Down=30
extra_servo_dwell_up: 0			# Additional dwell time (ms) prior to turning off the servo (can help servo settle)
extra_servo_dwell_down: 0		# Additional dwell time (ms) prior to turning off the servo (can help servo settle)

# Base value for the loading length used by the auto-calibration macro
# Please use a value SMALLER than the real reverse bowden length (40mm or less)
# This is only used during calibration, and has no impact on normal running
calibration_bowden_length: {calibration_bowden_length}

# If you are getting "timer too close" errors, increase the number of moves used during long loading and unloading moves
num_moves: 1				# Number of moves to make when loading or unloading bowden

# If enabled, the driver will "believe" the encoder reading and make correction moves to bring the filament to the desired
# end of bowden position. This is useful is you suspect slippage on high speed loading (requires accurate encoder)
# If disabled, the gear stepper will be solely responsible for filament positioning in bowden (requires minimal friction in feeder tubes)
apply_bowden_correction: 0

# Filament loading and homing controls and options
# Notes that if a toolhead sensor is configured it will become the default filament homing method and home_to_extruder an
# optional (but unecessary in this case) step.  Also note the 'home_to_extruder' step will always be performed during
# calibration regardless of these settings. For accurate homing and to avoid grinding, tune the gear stepper current reduction
#
# Possible options with toolhead sensor:
# 1.                                + HomeSensor(max/step/sync_load>0)  *** BEST option with sensor. Can work with FLEX!
# 2.                                + HomeSensor(max/step)                - Alternative if problems experienced with sync move
# 3. HomeExtruder(max/step/current) + HomeSensor(max/step/sync_load>0)    - Not recommended  Two homing steps / sync
# 4. HomeExtruder(max/step/current) + HomeSensor(max/step)                - Not recommended. Two homing steps
# (Options 3. & 4. require 'home_to_extruder: 1' to be set.  This is automatic for sensorless options 5. & 6. below)
#
# Options without toolhead sensor:
# 5. HomeExtruder(max/step)         + Sync Initial Load(sync_load)      *** BEST option without sensor
# 6. HomeExtruder(max/step)                                               - Alternative if problems experienced with sync move
#
extruder_homing_max: 50			# Maximum distance to advance in order to attempt to home the extruder
extruder_homing_step: 2.0		# Step size to use when homing to the extruder with collision detection (default 2)
extruder_homing_current: 40		# Percentage of gear stepper current to use when homing (TMC2209 only, 100 to disable)

toolhead_homing_max: 35			# Maximum distance to advance in order to attempt to home to toolhead sensor (default 20)
toolhead_homing_step: 1.0		# Step size to use when homing to the toolhead sensor (default 1)

# How far (mm) to run gear_stepper and extruder together in sync on load and unload. This will make loading and unloading
# more reliable and will act as a "hair pulling" step on unload.  These settings are optional - use 0 to disable
# Non zero value for 'sync_load_length' will synchronize the whole homing distance if toolhead sensor is installed
sync_load_length: 10			# mm of synchronized extruder loading at entry to extruder
sync_unload_length: 10			# mm of synchronized movement at start of bowden unloading

# Final loading distance
# This is the distance of the final filament load from the homing point to the nozzle
# If homing to toolhead sensor this will be the distance from the toolhead sensor to the nozzle
# If toolhead_sensor it will be the distance from the extruder gears (end of bowden) to the nozzle
#
# This value can be determined by manually inserting filament to your homing point (extruder gears or toolhead sensor)
# and advancing it 1-2mm at a time until it starts to extrude from the nozzle.  Subtract 1-2mm from that distance distance
# to get this value.  If you have large gaps in your purge tower, increase this value.  If you have blobs, reduce this value.
# This value will depend on your extruder, hotend and nozzle setup.
home_position_to_nozzle: 72		# Revo Voron with CW2 extruder using extruder homing
#home_position_to_nozzle: 62		# Revo Voron with CW2 extruder using toolhead sensor homing

# Selector operation. If configured for sensorless homing ERCF can detect blocked filament path and try to recover automatically
# Sensorless still requires the physical endstop switch to be configured as the endstop on the (non intuiative) GEAR stepper
sensorless_selector: {sensorless_selector}			# 0 = use a physical endstop, 1 = use sensorless selector homing

# The position of each tool on the selector.  See the manual for setting these values
colorselector: 2.3, 23.3, 44.3, 70.4, 91.4, 112.4, 138.5, 159.5, 180.5

# Whether each tool (technically gate) has filament available. If not specified all tools are active
# and must be the same length at the number of gates
#gate_status = 1, 1, 1, 0, 1, 1, 1, 0, 1

# Optional position of the filament bypass (special version of separator block). Comment out or set to 0 to disable
#bypass_selector = 122.8		# Set to your measured position

# Features
enable_clog_detection: {clog_detection}	# 0 = disable clog detection, 1 = enable clog detection
enable_endless_spool: {endless_spool}		# 0 = disable endless spool,  1 = enable endless spool (requires clog detection)

# If endless spool is turned on, you must define a list of EndlessSpool groups here, one entry for each tool in your ERCF
# when filament runs out on a tool, it will switch to the next "tool" (gate) with the same group number
# for example, if set to 1, 2, 3, 1, 2, 3, 1, 2, 3 on a 9 cart ERCF, and a runout occurs on tool #0
# the ERCF will switch to using tool or gate #3.
endless_spool_groups: 1, 2, 3, 1, 2, 3, 1, 2, 3                                    

# Advanced: Configurable, but fairly fixed values
timeout_pause: 72000		# Time out used by the ERCF_PAUSE
disable_heater: 600		# Delay after which the hotend heater is disabled in the ERCF_PAUSE state
min_temp_extruder: 200		# Used to ensure we can move the extruder and form tips
unload_buffer: 60		# Amount to reduce the fast unload so that accurate encoder unload has room to operate
load_bowden_tolerance: 8.0	# When using 'apply_bowden_correction' this is how close the correction moves will attempt to get on load
delay_servo_release: 2.0	# Delay release on servo by (mm) when not using synchronous load
parking_distance: 23.0		# Changes where the filament parks in the ERCF gate (final unload move)
homing_method: 0		# EXPERIMENTAL. Filament homing method if not using toolhead sensor. 0=collision detection, 1=stallguard
